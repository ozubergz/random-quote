{"version":3,"sources":["actions/index.js","containers/text_field.js","components/App.js","reducers/index.js","reducers/reducer_quote.js","index.js"],"names":["ROOT_URL","FETCH_QUOTE","fetchQuote","url","request","axios","get","type","payload","TextField","this","props","event","preventDefault","twitterUrl","concat","quote","author","react_default","a","createElement","className","id","href","onClick","bind","Component","connect","_ref","dispatch","bindActionCreators","App","text_field","rootReducer","combineReducers","state","arguments","length","undefined","action","data","createStoreWithMiddleware","applyMiddleware","ReduxPromise","createStore","ReactDOM","render","es","store","reducers","components_App","document","getElementById"],"mappings":"2OAEMA,EAAW,0CAEJC,EAAc,cAEpB,SAASC,IACd,IAAMC,EAAMH,EACNI,EAAUC,IAAMC,IAAIH,GAE1B,MAAO,CACLI,KAAMN,EACNO,QAASJ,OCPPK,8LAEFC,KAAKC,MAAMT,6CAGLU,GACNA,EAAMC,iBACNH,KAAKC,MAAMT,8CAIX,IAAMY,EAAU,0CAAAC,OAA6CL,KAAKC,MAAMK,MAAMA,MAA9D,OAAAD,OAAyEL,KAAKC,MAAMK,MAAMC,QAE1G,OACAC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sCACbH,EAAAC,EAAAC,cAAA,OAAKE,GAAG,aACNJ,EAAAC,EAAAC,cAAA,MAAIE,GAAG,OAAOD,UAAU,kBACpBH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBADjB,IAC0CX,KAAKC,MAAMK,MAAMA,MAD3D,IACkEE,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBAE/EH,EAAAC,EAAAC,cAAA,KAAGE,GAAG,SAASD,UAAU,iBAAzB,KAA4CX,KAAKC,MAAMK,MAAMC,QAC7DC,EAAAC,EAAAC,cAAA,KAAGE,GAAG,cAAcC,KAAMT,GACxBI,EAAAC,EAAAC,cAAA,UAAQC,UAAU,2BAAlB,QACEH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAGjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,UACEE,GAAG,YACHD,UAAU,uBACVG,QAASd,KAAKc,QAAQC,KAAKf,OAH7B,wBA1BcgB,aAqDTC,kBAdf,SAAAC,GACE,MAAO,CAAEZ,MADuBY,EAARZ,QAI1B,SAA4Ba,GAC1B,OAAOC,YAAmB,CAAE5B,cAAc2B,IAS7BF,CAA6ClB,GC5C7CsB,mLARX,OACEb,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACY,EAAD,cAJUN,8BCGHO,EAJKC,YAAgB,CAClClB,MCFa,WAA2B,IAAlBmB,EAAkBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAZ,GAAIG,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAExC,OAAOC,EAAOhC,MACZ,KAAKN,EACH,OAAOsC,EAAO/B,QAAQgC,KAC1B,QACE,OAAOL,MCGLM,EAA4BC,YAAgBC,IAAhBD,CAA8BE,KAEhEC,IAASC,OACP5B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAUC,MAAOP,EAA0BQ,IACzC/B,EAAAC,EAAAC,cAAC8B,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.52675909.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst ROOT_URL = \"https://talaikis.com/api/quotes/random/\";\r\n\r\nexport const FETCH_QUOTE = \"FETCH_QUOTE\";\r\n\r\nexport function fetchQuote() {\r\n  const url = ROOT_URL;\r\n  const request = axios.get(url);\r\n  \r\n  return {\r\n    type: FETCH_QUOTE,\r\n    payload: request\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { fetchQuote } from '../actions';\r\n\r\nclass TextField extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchQuote();\r\n  }\r\n\r\n  onClick(event) {\r\n    event.preventDefault();\r\n    this.props.fetchQuote();\r\n  }\r\n\r\n  render() {\r\n    const twitterUrl = `https://twitter.com/intent/tweet?text=\"${this.props.quote.quote}\" -${this.props.quote.author}`;\r\n    \r\n    return(\r\n    <div className=\"container col-md-6 col-sm-offset-3\">\r\n      <div id=\"quote-box\">\r\n        <h4 id=\"text\" className=\"text-md-center\">\r\n            <i className=\"fa fa-quote-left\"></i> {this.props.quote.quote} <i className=\"fa fa-quote-right\"></i>\r\n        </h4>\r\n        <p id=\"author\" className=\"text-md-right\">- {this.props.quote.author}</p>\r\n        <a id=\"tweet-quote\" href={twitterUrl}>\r\n          <button className=\"btn btn-light tweet-btn\">Share \r\n            <i className=\"fa fa-twitter\"></i>\r\n          </button>\r\n        </a>\r\n        <div className=\"right-btn\">\r\n          <button\r\n            id=\"new-quote\"\r\n            className=\"btn btn-light btn-xs\"\r\n            onClick={this.onClick.bind(this)}>\r\n            Next Quote\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({quote}) {\r\n  return { quote };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return bindActionCreators({ fetchQuote }, dispatch);\r\n}\r\n\r\n// function mapStateToProps(state) {\r\n//   return {\r\n//     quote: state.quote\r\n//   }\r\n// }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TextField);","import React, { Component } from 'react';\n\nimport TextField from '../containers/text_field';\n\nclass App extends Component {\n  render() {\n    return(\n      <div>\n        <TextField />\n      </div>\n    );\n  }\n}\n\nexport default App;","import { combineReducers } from 'redux';\r\nimport QuoteReducer from './reducer_quote';\r\n\r\nconst rootReducer = combineReducers({\r\n  quote: QuoteReducer\r\n});\r\n\r\nexport default rootReducer;","import { FETCH_QUOTE } from '../actions';\r\n\r\nexport default function(state={}, action) {\r\n\r\n  switch(action.type) {\r\n    case FETCH_QUOTE:\r\n      return action.payload.data;\r\n  default:\r\n    return state;\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport ReduxPromise from 'redux-promise';\n\n\n\nimport reducers from './reducers';\n\nconst createStoreWithMiddleware = applyMiddleware(ReduxPromise)(createStore);\n\nReactDOM.render(\n  <Provider store={createStoreWithMiddleware(reducers)}>\n    <App />\n  </Provider>,\n  document.getElementById('root'));\n\n"],"sourceRoot":""}